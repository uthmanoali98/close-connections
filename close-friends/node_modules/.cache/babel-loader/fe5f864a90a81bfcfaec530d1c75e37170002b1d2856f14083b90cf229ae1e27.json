{"ast":null,"code":"var _jsxFileName = \"/Users/uthmanoali98/close-friends/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardGame = () => {\n  _s();\n  const [cards, setCards] = useState([{\n    id: 0,\n    flipped: false\n  }]); // Array of cards\n  const [currentCard, setCurrentCard] = useState(0); // Index of the current card\n\n  const handleClick = () => {\n    const updatedCards = [...cards];\n\n    // First click: Flip the card\n    if (!updatedCards[currentCard].flipped) {\n      updatedCards[currentCard].flipped = true;\n    } else {\n      // Second click: Shift the card and add a new one\n      updatedCards[currentCard].shifted = true;\n      const newCard = {\n        id: cards.length,\n        flipped: false\n      };\n      updatedCards.push(newCard); // Add a new card to the stack\n      setCurrentCard(currentCard + 1); // Move to the next card\n    }\n    setCards(updatedCards); // Update the state with new cards\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card ${card.flipped ? \"flipped\" : \"\"} ${card.shifted ? \"shifted\" : \"\"}`,\n      style: {\n        zIndex: cards.length - index // Ensure the top card is on top\n      },\n      onClick: index === currentCard ? handleClick : null // Only allow clicks on the current card\n      ,\n      children: card.flipped ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-front\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Question #\", card.id + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-back\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/path-to-your-purple-card.png\",\n          alt: \"Card Back\",\n          className: \"card-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this)\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(CardGame, \"873ILTNNXFCjvu8sR1+6vSZ8bY8=\");\n_c = CardGame;\nexport default CardGame;\nvar _c;\n$RefreshReg$(_c, \"CardGame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CardGame","_s","cards","setCards","id","flipped","currentCard","setCurrentCard","handleClick","updatedCards","shifted","newCard","length","push","className","children","map","card","index","style","zIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/uthmanoali98/close-friends/src/components/Card.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Card.css\";\n\nconst CardGame = () => {\n    const [cards, setCards] = useState([{ id: 0, flipped: false }]); // Array of cards\n    const [currentCard, setCurrentCard] = useState(0); // Index of the current card\n\n    const handleClick = () => {\n        const updatedCards = [...cards];\n\n        // First click: Flip the card\n        if (!updatedCards[currentCard].flipped) {\n            updatedCards[currentCard].flipped = true;\n        } else {\n            // Second click: Shift the card and add a new one\n            updatedCards[currentCard].shifted = true;\n            const newCard = { id: cards.length, flipped: false };\n            updatedCards.push(newCard); // Add a new card to the stack\n            setCurrentCard(currentCard + 1); // Move to the next card\n        }\n\n        setCards(updatedCards); // Update the state with new cards\n    };\n\n    return (\n        <div className=\"card-container\">\n            {cards.map((card, index) => (\n                <div\n                    key={card.id}\n                    className={`card ${card.flipped ? \"flipped\" : \"\"} ${card.shifted ? \"shifted\" : \"\"\n                        }`}\n                    style={{\n                        zIndex: cards.length - index, // Ensure the top card is on top\n                    }}\n                    onClick={index === currentCard ? handleClick : null} // Only allow clicks on the current card\n                >\n                    {card.flipped ? (\n                        <div className=\"card-front\">\n                            <p>Question #{card.id + 1}</p>\n                        </div>\n                    ) : (\n                        <div className=\"card-back\">\n                            <img\n                                src=\"/path-to-your-purple-card.png\"\n                                alt=\"Card Back\"\n                                className=\"card-image\"\n                            />\n                        </div>\n                    )}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default CardGame;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC;IAAEO,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EACjE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEnD,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMC,YAAY,GAAG,CAAC,GAAGP,KAAK,CAAC;;IAE/B;IACA,IAAI,CAACO,YAAY,CAACH,WAAW,CAAC,CAACD,OAAO,EAAE;MACpCI,YAAY,CAACH,WAAW,CAAC,CAACD,OAAO,GAAG,IAAI;IAC5C,CAAC,MAAM;MACH;MACAI,YAAY,CAACH,WAAW,CAAC,CAACI,OAAO,GAAG,IAAI;MACxC,MAAMC,OAAO,GAAG;QAAEP,EAAE,EAAEF,KAAK,CAACU,MAAM;QAAEP,OAAO,EAAE;MAAM,CAAC;MACpDI,YAAY,CAACI,IAAI,CAACF,OAAO,CAAC,CAAC,CAAC;MAC5BJ,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;IACrC;IAEAH,QAAQ,CAACM,YAAY,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,oBACIV,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC1Bb,KAAK,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBnB,OAAA;MAEIe,SAAS,EAAE,QAAQG,IAAI,CAACZ,OAAO,GAAG,SAAS,GAAG,EAAE,IAAIY,IAAI,CAACP,OAAO,GAAG,SAAS,GAAG,EAAE,EAC1E;MACPS,KAAK,EAAE;QACHC,MAAM,EAAElB,KAAK,CAACU,MAAM,GAAGM,KAAK,CAAE;MAClC,CAAE;MACFG,OAAO,EAAEH,KAAK,KAAKZ,WAAW,GAAGE,WAAW,GAAG,IAAK,CAAC;MAAA;MAAAO,QAAA,EAEpDE,IAAI,CAACZ,OAAO,gBACTN,OAAA;QAAKe,SAAS,EAAC,YAAY;QAAAC,QAAA,eACvBhB,OAAA;UAAAgB,QAAA,GAAG,YAAU,EAACE,IAAI,CAACb,EAAE,GAAG,CAAC;QAAA;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,gBAEN1B,OAAA;QAAKe,SAAS,EAAC,WAAW;QAAAC,QAAA,eACtBhB,OAAA;UACI2B,GAAG,EAAC,+BAA+B;UACnCC,GAAG,EAAC,WAAW;UACfb,SAAS,EAAC;QAAY;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IACR,GApBIR,IAAI,CAACb,EAAE;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAqBX,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACxB,EAAA,CAlDID,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAoDd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}